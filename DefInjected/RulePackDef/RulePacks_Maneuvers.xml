<?xml version="1.0" encoding="utf-8" ?>
<LanguageData>

<!-- Español infinitivo -ar -er -ir -->
<!-- Español pasado 	ado  ido 	-->
<!-- Español presente	corta raja  -->

  <Maneuver_Slash.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->cortar</li>
    <li>damaged_inf->cortar</li>
    <li>damaged_inf->tajar</li>
    <li>damaged_inf->rajar</li>
    <li>damaged_inf->rebanar</li>
    <li>damaged_inf(deflected!=True)->tajo</li>
    <li>damaged_past(p=4)->acuchillado</li>
    <li>damaged_past->cortado</li>
    <li>damaged_past->tajado</li>
    <li>damaged_past->rajado</li>
    <li>damaged_past->rebanado</li>
    <li>damaged_past(deflected!=True)->recortado</li>
    <li>damaged_present->acuchilla</li>
    <li>damaged_present->corta</li>
    <li>damaged_present->rebana</li>
    <li>damaged_present(deflected!=True)->recorta</li>
    <li>damaged_present(deflected!=True)->desgarra</li>
    <li>damaged_present(deflected!=True)->lacera</li>
    <li>woundname->herida</li>
    <li>woundname(p=0.3)->abertura</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->con sangre goteando de la [woundname]</li>
    <li>flavortext_situation->con fluidos que goteando de la [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exponiendo la carne debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exponiendo los mecanismos debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una sangrienta [woundname]</li>
    <li>destroyed_past->fileteado</li>
    <li>destroyed_past->dividido</li>
    <li>destroyed_past->cortado a la mitad</li>
    <li>destroyed_past->separado</li>
    <li>destroyed_past->grieta</li>
    <li>destroyed_present->filetea</li>
    <li>destroyed_present->dividide</li>
    <li>destroyed_present->corta a la mitad</li>
    <li>destroyed_present->separa</li>
    <li>destroyed_present->agrieta</li>
    <li>destroyed_suffix->en piezas ordenadas</li>
    <li>destroyed_suffix->limpiamente</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exponiendo su funcionamiento interno</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->cortandolo en dos</li>
  </Maneuver_Slash.rulePack.rulesStrings>

  <Maneuver_Stab.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->apuñalar</li>
    <li>damaged_inf->pinchar</li>
    <li>damaged_inf(deflected!=True)->atravesar</li>
    <li>damaged_inf(deflected!=True)->punciónar</li>
    <li>damaged_inf(deflected!=True)->brocheta</li>
    <li>damaged_past(p=4)->apuñalado</li>
    <li>damaged_past->pinchado</li>
    <li>damaged_past(deflected!=True)->perforado</li>
    <li>damaged_past(deflected!=True)->pinchado</li>
    <li>damaged_past(deflected!=True)->ensartado</li>
    <li>damaged_present(deflected!=True)->perfora</li>
    <li>damaged_present(deflected!=True)->perfora</li>
    <li>damaged_present(deflected!=True)->penetra</li>
    <li>damaged_present(deflected!=True)->ensarta</li>
    <li>woundname->agujero</li>
    <li>woundname->herida</li>
    <li>woundname->hendidura</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una sangrante [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un rasguño [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un sangrado [woundname]</li>
    <li>destroyed_past->empalado</li>
    <li>destroyed_past->perforado</li>
    <li>destroyed_past->ensartado</li>
    <li>destroyed_present->empala</li>
    <li>destroyed_present->perfora</li>
    <li>destroyed_present->ensarta</li>
    <li>destroyed_suffix->atravesó directo</li>
    <li>destroyed_suffix->dejando un agujero limpio</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->dejándolo goteando fluidos sangrientos</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->dejándolo con fluidos irreconocibles</li>
  </Maneuver_Stab.rulePack.rulesStrings>

  <Maneuver_Smash_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->aplastar</li>
    <li>damaged_inf->golpetazo</li>
    <li>damaged_inf->batir</li>
    <li>damaged_inf->golpear</li>
    <li>damaged_inf->atacar</li>
    <li>damaged_past(p=4)->aplastado</li>
    <li>damaged_past->golpeado</li>
    <li>damaged_past->aporreado</li>
    <li>damaged_past->azotado</li>
    <li>damaged_past->atacado</li>
    <li>damaged_present->impone</li>
    <li>damaged_present->da un castañazo</li>
    <li>damaged_present->paliza</li>
    <li>damaged_present(deflected!=True)->hematoma</li>
    <li>damaged_present(deflected!=True)->lacerante</li>
    <li>destroyed_past->destrozado</li>
    <li>destroyed_past->aplastado</li>
    <li>destroyed_past->borrado</li>
    <li>destroyed_past->aniquilado</li>
    <li>destroyed_past->rompiendo</li>
    <li>destroyed_present->aplasta</li>
    <li>destroyed_present->abruma</li>
    <li>destroyed_present->borrado</li>
    <li>destroyed_present->aniquila</li>
    <li>destroyed_present->quebranta</li>
  </Maneuver_Smash_Damage.rulePack.rulesStrings>

  <Maneuver_Smash.rulePack.rulesStrings>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un moretón enorme</li>
    <li>flavortext_consequence->dejando el área visiblemente deformado</li>
    <li>flavortext_consequence->golpeando [RECIPIENT_objective] fuera de balance</li>
    <li>flavortext_consequence->golpeando [RECIPIENT_objective] por el lado</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] pedacitos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una fina niebla</li>
    <li>destroyed_suffix->[to] fragmentos</li>
  </Maneuver_Smash.rulePack.rulesStrings>

  <Maneuver_Scratch_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->arañar</li>
    <li>damaged_inf(deflected!=True)->lacerar</li>
    <li>damaged_inf(deflected!=True)->rasgar</li>
    <li>damaged_inf->cortar</li>
    <li>damaged_past(p=4)->arañado</li>
    <li>damaged_past(deflected!=True)->lacerado</li>
    <li>damaged_past(deflected!=True)->rasgado</li>
    <li>damaged_past->cortado</li>
    <li>damaged_present->rasca</li>
    <li>damaged_present(deflected!=True)->lacera</li>
    <li>damaged_present(deflected!=True)->desgarra</li>
    <li>damaged_present->corta</li>
    <li>destroyed_past->mutilado</li>
    <li>destroyed_past->lacerado</li>
    <li>destroyed_past->arrancado</li>
    <li>destroyed_past->triturado</li>
    <li>destroyed_past->despedazado</li>
    <li>destroyed_present->magulla</li>
    <li>destroyed_present->lacera</li>
    <li>destroyed_present->arranca</li>
    <li>destroyed_present->tritura</li>
    <li>destroyed_present->desgarra</li>
  </Maneuver_Scratch_Damage.rulePack.rulesStrings>

  <Maneuver_Scratch.rulePack.rulesStrings>
    <li>woundname->herida</li>
    <li>woundname(p=0.3)->abierta</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->con sangre goteando desde la [woundname]</li>
    <li>flavortext_situation->con fluidos que gotean de la [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->y expone la carne debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->y exponer la maquinaria debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->y deja una sangriento [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras desordenadas</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] piezas desordenadas</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] fragmentos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una pila de sangre</li>
  </Maneuver_Scratch.rulePack.rulesStrings>

  <Maneuver_Poke.rulePack.rulesStrings>
    <li>damaged_inf(p=2)->empujar</li>
    <li>damaged_inf(p=2)->codear</li>
    <li>damaged_inf->pellizcar</li>
    <li>damaged_inf->empujar</li>
    <li>damaged_inf->clavar</li>
    <li>damaged_past(p=2)->empujado</li>
    <li>damaged_past(p=2)->codeado</li>
    <li>damaged_past->pellizcado</li>
    <li>damaged_past->empujado</li>
    <li>damaged_past->codeado</li>
    <li>damaged_present(p=2)->empuja</li>
    <li>damaged_present(p=2)->codea</li>
    <li>damaged_present->pellizca</li>
    <li>damaged_present->empuja</li>
    <li>damaged_present->codea</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un moretón enorme</li>
    <li>flavortext_consequence->dejando el área visiblemente deformada</li>
    <li>flavortext_consequence->golpea [RECIPIENT_objective] fuera de sí</li>
    <li>flavortext_consequence->golpea [RECIPIENT_objective] a los lados</li>
    <li>destroyed_past->destrozado</li>
    <li>destroyed_past->aplastado</li>
    <li>destroyed_past->borrado</li>
    <li>destroyed_past->aniquilado</li>
    <li>destroyed_past->roto</li>
    <li>destroyed_present->aplasta</li>
    <li>destroyed_present->abruma</li>
    <li>destroyed_present->borra</li>
    <li>destroyed_present->aniquila</li>
    <li>destroyed_present->rompe</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] pedacitos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una fina niebla</li>
    <li>destroyed_suffix->[to] fragmentos</li>
  </Maneuver_Poke.rulePack.rulesStrings>

  <Maneuver_Bite.rulePack.rulesStrings>
    <li>damaged_inf->morder</li>
    <li>damaged_inf->masticar</li>
    <li>damaged_inf(p=0.5)->dentellear</li>
    <li>damaged_past->mordido</li>
    <li>damaged_past->masticado</li>
    <li>damaged_past->dentelleado</li>
    <li>damaged_past->roido</li>
    <li>damaged_past(deflected!=True)->rasgado</li>
    <li>damaged_present->muerde</li>
    <li>damaged_present->mastica</li>
    <li>damaged_present->dentellea</li>
    <li>damaged_present->pica</li>
    <li>damaged_present(deflected!=True)->degarrar</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exponiendo la carne debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exponiendo la maquinaria debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando desgarros espantosos en la piel</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->dejando desgarros espantosos en el metal</li>
    <li>destroyed_past->devorado</li>
    <li>destroyed_past->apartado</li>
    <li>destroyed_past->arrancado</li>
    <li>destroyed_past->devastado</li>
    <li>destroyed_present->devora</li>
    <li>destroyed_present->separa</li>
    <li>destroyed_present->arranca</li>
    <li>destroyed_present->devasta</li>
    <li>destroyed_suffix->[to] pizcas</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras desordenadas</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] un lío irreconocible</li>
  </Maneuver_Bite.rulePack.rulesStrings>

  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] golpeado [TOOL_label] delante de ojos [RECIPIENT_definite] .</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] pateado por una lluvia de [TOOL_label] delante de ojos [RECIPIENT_definite].</li>
  </Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>

  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] intento de golpear [TOOL_label] delante de ojos [RECIPIENT_definite], pero se perdió.</li>
  </Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>

  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] intento de golpear [TOOL_label] en [RECIPIENT_definite] delante de ojos, pero [RECIPIENT_definite] lo esquivó de cualquier manera.</li>
    <li>r_logentry->[INITIATOR_definite] intento de golpear [TOOL_label] en [RECIPIENT_definite] delante de ojos, pero [RECIPIENT_definite] lo bloqueó.</li>
  </Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>


</LanguageData>